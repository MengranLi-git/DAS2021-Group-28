set.seed(84)
nn_credit <- neuralnet(f,data=credit_card_matrix_final, hidden=c(2),
linear.output=FALSE,err.fct='ce',likelihood=TRUE)
library(splines)
resp <- resp <- read.csv(url("http://www.stats.gla.ac.uk/~tereza/rp/resp.csv"))
# convert to "Date" type variable
resp$Date <- as.Date(as.character(resp$Date), format="%Y%m%d")
ggplot(resp, aes(Date, admissions_glasgow)) + geom_line(color = "#4d4d4d") +
scale_x_date(date_labels = "%b-%Y", date_breaks = "1 year") + xlab("Date") +
ylab("Respiratory admissions") +
ggtitle("Hospital admissions due to respiratory disease in Glasgow 2000-2007")
library(ggplot)
ggplot(resp, aes(Date, admissions_glasgow)) + geom_line(color = "#4d4d4d") +
scale_x_date(date_labels = "%b-%Y", date_breaks = "1 year") + xlab("Date") +
ylab("Respiratory admissions") +
ggtitle("Hospital admissions due to respiratory disease in Glasgow 2000-2007")
library(ggplot2)
ggplot(resp, aes(Date, admissions_glasgow)) + geom_line(color = "#4d4d4d") +
scale_x_date(date_labels = "%b-%Y", date_breaks = "1 year") + xlab("Date") +
ylab("Respiratory admissions") +
ggtitle("Hospital admissions due to respiratory disease in Glasgow 2000-2007")
x <- resp[,2]
n <- length(x)
t <- 1:n
# linear trend with harmonic seasonal component:
Z.fixed <- cbind(t, sin(2*pi*t/365), cos(2*pi*t/365))
resp$trend.fixed <- lm(x~Z.fixed)$fitted.values
resp$x.fixed <- x - resp$trend.fixed
# natural cubic spline model:
Z.flexible <- ns(t, df=48)
resp$trend.flexible <- lm(x~Z.flexible)$fitted.values
resp$x.flexible <- x - resp$trend.flexible
p1 <- ggplot(resp, aes(Date, admissions_glasgow)) +
geom_point(color="#4d4d4d", alpha=0.4) +
geom_line(aes(y=trend.fixed), color = "#d73027", size=1) +
scale_x_date(date_labels = "%b-%Y", date_breaks = "2 year") +
xlab("Date") + ylab("Respiratory admissions") +
ggtitle("Fitted trend from model A")
p2 <- ggplot(resp, aes(Date, x.fixed)) +
geom_line(color = "#d73027", alpha=0.7) +
scale_x_date(date_labels = "%b-%Y", date_breaks = "2 year") +
xlab("Date") + ylab("Respiratory admissions") +
ggtitle("De-trended data from model A")
p3 <- ggplot(resp, aes(Date, admissions_glasgow)) +
geom_point(color="#4d4d4d", alpha=0.4) +
geom_line(aes(y=trend.flexible), color = "#4575b4", size=1) +
scale_x_date(date_labels = "%b-%Y", date_breaks = "2 year") +
xlab("Date") + ylab("Respiratory admissions") +
ggtitle("Fitted trend from model B")
p4 <- ggplot(resp, aes(Date, x.flexible)) +
geom_line(color = "#4575b4", alpha=0.7) +
scale_x_date(date_labels = "%b-%Y", date_breaks = "2 year") +
xlab("Date") + ylab("Respiratory admissions") +
ggtitle("De-trended data from model B")
grid.arrange(p1,p3,p2,p4, nrow=2)
gpa <- read.csv(url("http://www.stats.gla.ac.uk/~tereza/rp/gpa.csv"))
head(gpa)
ggplot(gpa, aes(x=occasion, y=gpa))+geom_point(alpha=0.9, color="#7a0177")
library(ggplot2)
ggplot(gpa, aes(x=occasion, y=gpa))+geom_point(alpha=0.9, color="#7a0177")
ggplot(gpa, aes(x=occasion, y=gpa))+ geom_point(alpha=0.9, color="#7a0177") +
geom_path( aes(group=student), alpha=0.3, col="#ae017e")
library(lme4)
gpa_ranint <- lmer(gpa ~ occasion + (1|student), data=gpa)
summary(gpa_ranint)
round(confint(gpa_ranint, oldNames=FALSE),3)
round(confint(gpa_ranint, oldNames=FALSE, method="boot"),3)
round(head(ranef(gpa_ranint)$student),3)
gpa_ranint@beta[1]
round(head(gpa_ranint@beta[1]+ranef(gpa_ranint)$student),3)
round(head(coef(gpa_ranint)$student),3)
gpa_rc<-lmer(gpa ~ occasion + (1+occasion|student), data=gpa)
summary(gpa_rc)
gpa_rc_uncor <- lmer(gpa ~ occasion + (1|student)+ (0+occasion|student),
data=gpa)
summary(gpa_rc_uncor)
anova(gpa_rc_uncor,gpa_rc)
round(confint(gpa_rc, oldNames=FALSE),3)
round(head(ranef(gpa_rc)$student),3) # random effects
round(head(coef(gpa_rc)$student),3) # random coefficients
gpa_lm <- lm(gpa ~ occasion, data=gpa)
summary(gpa_lm)
p1<-predict(gpa_rc)
p2<-predict(gpa_lm)
predictions <- data.frame(x=c(1:6), s1_m=p1[1:6], s2_m=p1[7:12], s2_l=p2[7:12],
gpa_1=gpa$gpa[1:6], gpa_2=gpa$gpa[7:12] )
ggplot(predictions, aes(x=x, y=gpa_1)) +
geom_point(color="#f768a1", alpha=0.8) +
geom_line(aes(y=s1_m), colour="#f768a1", linetype=4)+
geom_point(aes(x=x,y=gpa_2), colour="#7a0177",alpha=0.8) +
geom_line(aes(y=s2_m), colour="#7a0177", linetype=4) +
geom_line(aes(y=s2_l), colour="#feb24c") + xlab("Occasion") + ylab("GPA")
p1
data.frame(x=c(1:6), s1_m=p1[1:6], s2_m=p1[7:12], s2_l=p2[7:12],
gpa_1=gpa$gpa[1:6], gpa_2=gpa$gpa[7:12] )
p1[1:6]
predictions
p1<-predict(gpa_rc)
p2<-predict(gpa_lm)
p3 <- predict(lm(gpa~occasion, data=gpa[1:6,]))
predictions <- data.frame(x=c(1:6), s1_m=p1[1:6], s1_l=p2[1:6], s1_i=p3[1:6],
gpa_1=gpa$gpa[1:6])
ggplot(predictions, aes(x=x, y=gpa_1)) +
geom_point(color="#f768a1", alpha=0.8) +
geom_line(aes(y=s1_m), colour="#f768a1", linetype=4)+
geom_line(aes(y=s1_l), colour="#feb24c") +
geom_line(aes(y=s1_i), colour="#fc4e2a") + xlab("Occasion") + ylab("GPA")
pig.weights <- read.csv(url("http://www.stats.gla.ac.uk/~tereza/rp/pigweights.csv"))
ggplot(pig.weights, aes(x=num.weeks, y=weight))+ geom_point(alpha=0.5, color="#08589e") +
geom_path(aes(group=id.num), alpha=0.3, col="#2b8cbe") + xlab("week number")
wm0 <- lm(weight ~ num.weeks, data=pig.weights)
summary(wm0)
wm1 <- lmer(weight ~ 1 + num.weeks +(1|id.num), data=pig.weights)
summary(wm1)
wm2 <- lmer(weight ~ num.weeks + (1|id.num) + (0+num.weeks|id.num), data=pig.weights)
summary(wm2)
wm3 <- lmer(weight ~ 1 + num.weeks +(1+num.weeks|id.num), data=pig.weights)
summary(wm3)
anova(wm3,wm2)
anova(wm2,wm1)
p1<-predict(wm2, newdata=data.frame(id.num=16, num.weeks=1:9))
p1
p2<-predict(wm0, newdata=data.frame(num.weeks=1:9))
p2
predictions <- data.frame(x=1:9, p1=p1, p2=p2)
ggplot(pig.weights, aes(x=num.weeks, y=weight))+ geom_point(alpha=0.5, color="#08589e") +
xlab("week number") +
geom_path(data=predictions, aes(x=x, y=p1), col="#7bccc4", linetype=4) +
geom_path(data=predictions, aes(x=x, y=p2), col="#a8ddb5", linetype=5)
library(faraway)
data(pulp)
head(pulp)
library(lme4)
mmod <- lmer(bright ~ 1+(1|operator), data=pulp)
summary(mmod)
ggplot(pulp, aes(x=bright, y=operator))+ geom_point(alpha=0.5, color="#ec7014") +
geom_path(aes(group=operator), alpha=0.3, col="#fec44f")
lmod <- lm(bright ~ operator, data=pulp)
summary(lmod)
anova(lmod)
round(confint(mmod,method="boot",oldNames=FALSE),3)
# Diagnostic plots:
par(mfrow=c(1,2))
qqnorm(resid(mmod), main="")
qqline(resid(mmod))
plot(fitted(mmod), resid(mmod), xlab="Fitted", ylab="Residuals")
abline(0,0)
bites <- read.csv(url("http://www.stats.gla.ac.uk/~tereza/rp/bites.csv"))
head(bites)
bites$location <- as.factor(bites$location)
ggplot(bites, aes(x=score, y=product))+
geom_point(aes(shape = location, color=location)) +
geom_path(aes(group=product, color=location)) +
facet_wrap(~location)
bm1 <- lmer(score ~ product+(1|location)+(1|product:location), data=bites)
summary(bm1)
confint(bm1, oldNames=FALSE)
gpa_multil<-lmer(gpa ~ occasion + sex + highgpa + (1+occasion|student), data=gpa)
summary(gpa_multil)
round(confint(gpa_multil, oldNames=FALSE),3)
library(mlmRev)
install.packages("mlmeRev")
library(mlmRev)
install.packages("mlmRev")
library(mlmRev)
head(Contraception)
library(lattice)
lattice.options(default.theme = function() standard.theme())
print(xyplot(ifelse(use == "Y", 1, 0) ~ age|urban, Contraception,
groups = livch, type = c("g", "smooth"),
auto.key = list(space = "top", points = FALSE,
lines = TRUE, columns = 4),
ylab = "Proportion", xlab = "Centered age"))
Contraception <- within(Contraception,
ch <- factor(livch != 0, labels = c("N", "Y")))
head(Contraception)
print(xyplot(ifelse(use == "Y", 1, 0) ~ age|urban, Contraception,
groups = ch, type = c("g", "smooth"),
auto.key = list(space = "top", points = FALSE,
lines = TRUE, columns = 2),
ylab = "Proportion", xlab = "Centered age"))
glm1 <- glm(use ~ 1 + urban + age*ch + I(age^2), data=Contraception,
family=binomial)
summary(glm1)
within(Contraception,
ch <- factor(livch != 0, labels = c("N", "Y")))
factor(livch != 0, labels = c("N", "Y")))
factor(livch != 0, labels = c("N", "Y"))
ch <- factor(livch != 0, labels = c("N", "Y"))
head(Contraception)
livch
factor(Contraception$livch != 0, labels = c("N", "Y"))
head(Contraception)
head(epilepsy)
ggplot(tdata, aes(x=week, y=sqrt(seizures), color=factor(treat), group=id)) +
geom_point(alpha=0.5) + geom_path(aes(linetype=factor(treat))) +
scale_color_manual(values=c("#fd8d3c", "#41ab5d"),
labels=c("Placebo","Treatment"), name="Treatment") +
scale_linetype_manual(values=c(1,6),
labels=c("Placebo", "Treatment"), name="Treatment")
tdata <- data.frame(epilepsy[epilepsy$expind==1,], week=rep(seq(2,8, by=2), 59))
ggplot(tdata, aes(x=week, y=sqrt(seizures), color=factor(treat), group=id)) +
geom_point(alpha=0.5) + geom_path(aes(linetype=factor(treat))) +
scale_color_manual(values=c("#fd8d3c", "#41ab5d"),
labels=c("Placebo","Treatment"), name="Treatment") +
scale_linetype_manual(values=c(1,6),
labels=c("Placebo", "Treatment"), name="Treatment")
# mean seizures (per week) during experiment
y <- matrix( epilepsy$seizures, nrow=5)
exp <- sqrt( apply(y[-1,], 2, mean)/2)
# mean seizures (per week) during baseline period
bas <- sqrt(epilepsy$seizures[epilepsy$expind==0]/8)
d <- data.frame(exp, bas, t=epilepsy$treat[5*(1:59)]+2)
ggplot(d, aes(x=bas, y=exp, color=factor(t))) + geom_point(alpha=0.8) +
scale_colour_manual(values=c("#fd8d3c", "#41ab5d"),
labels=c("Placebo","Treatment"), name="Treatment") +
xlab("sqrt(Baseline)") + ylab("sqrt(Experiment)") +
geom_abline(slope=1, intercept=0)
y
(y[-1,]
library(gee)
library(gee)
install.packages("gee")
library(gee)
g1 <- gee(seizures ~ offset(log(timeadj))+expind+treat+I(expind*treat), id,
family=poisson, corstr="independence", data=epilepsy, subset=(id!=49))
summary(g1)
epilepsy$id
g2 <- gee(seizures ~ offset(log(timeadj))+expind+treat+I(expind*treat), id,
family=poisson, corstr="exchangeable", data=epilepsy, subset=(id!=49))
summary(g2)
g3 <- gee(seizures ~ offset(log(timeadj))+expind+treat+I(expind*treat), id,
family=poisson, corstr="AR-M", Mv=1, data=epilepsy, subset=(id!=49))
summary(g3)
g4 <- gee(seizures ~ offset(log(timeadj))+expind+treat+I(expind*treat), id,
family=poisson, corstr="unstructured", data=epilepsy, subset=(id!=49))
summary(g4)
library(faraway)
head(ohio)
fit.un <- gee(resp~age*smoke, id=id, family=binomial, corstr="unstructured", data=ohio)
summary(fit.un)
fit.un2 <- gee(resp~age+smoke, id=id, family=binomial, corstr="unstructured", data=ohio)
summary(fit.un2)
fit.ex2 <- gee(resp ~ age+smoke, id=id, family=binomial, corstr="exchangeable", data=ohio)
summary(fit.ex2)
fit.glmm1 <- glmer(resp ~ age + smoke + (1|id), family=binomial, data=ohio)
summary(fit.glmm1)
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, comment = NA, fig.pos = 'H')
library(tidyverse)
library(tidymodels)
library(GGally)
library(car)
library(sjPlot)
library(skimr)
library(kableExtra)
Data <- read.csv("dataset28.csv")
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, comment = NA, fig.pos = 'H')
Data <- read.csv("data/Group_28.csv")
Data <- Data %>% spread(variable, value)
Data$DateCode <- as.factor(Data$DateCode)
setwd("C:\\Users\\Aishwin Tikku\\Documents\\GitHub\\DAS2021-Group-28")
Data <- read.csv("dataset28.csv")
View(Data)
View(Data)
View(Data)
setwd("C:\\Users\\Aishwin Tikku\\Documents\\GitHub\\DAS2021-Group-28")
Data <- read.csv("dataset28.csv")
#### data processing ####
Data <- Data[, -1]
glimpse(Data)
summary(Data)
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
summary(Data)
setwd("C:\\Users\\Aishwin Tikku\\Documents\\GitHub\\DAS2021-Group-28")
Data <- read.csv("dataset28.csv")
```{ r echo = TRUE, eval = TRUE, warning = FALSE, message = FALSE}
Data <- Data[, -1]
glimpse(Data)
summary(Data)
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
``
```{ r, echo = TRUE, eval = TRUE, warning = FALSE, message = FALSE}
Data <- Data[, -1]
glimpse(Data)
summary(Data)
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
```
setwd("C:\\Users\\Aishwin Tikku\\Documents\\GitHub\\DAS2021-Group-28")
Data1 <- read.csv("dataset28.csv")
View(Data1)
summary(Data)
Data <- Data[, -1]
glimpse(Data)
summary(Data)
Data$country <- as.factor(Data$country)
setwd("C:\\Users\\Aishwin Tikku\\Documents\\GitHub\\DAS2021-Group-28")
Data <- read.csv("dataset28.csv")
View(Data)
Data <- Data[, -1]
glimpse(Data)
summary(Data)
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
summary(Data)
summary(Data)
library(knitr)
Data <- Data[, -1]
glimpse(Data)
kable(summary(Data), caption = " Summary Table of Wine DAtaset")
Data$country <- as.factor(Data$country)
Data <- Data[, -1]
glimpse(Data)
kable(summary(Data), caption = " Summary Table of Wine DAtaset")
Data$country <- as.factor(Data$country)
library(knitr)
library(knitr)
``` {r echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE}
setwd("C:\\Users\\Aishwin Tikku\\Documents\\GitHub\\DAS2021-Group-28")
Data <- read.csv("dataset28.csv")
Data <- Data[, -1]
glimpse(Data)
kable(summary(Data), caption = " Summary Table of Wine DAtaset")
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
summary(Data)
View(Data)
View(Data)
View(Data)
# Group by points, those greater than 90 are pass, others are fail
Data <- Data %>% mutate(score = ifelse(points > 90, "Pass", "Fail"))
View(Data)
Data$score <- as.factor(Data$score)
#### descriptive statistics ####
Data[, c(2, 3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x = value), fill = "#80C687", color = "#80C687", alpha = 0.8) +
facet_wrap(~variable, scales = "free")
#### descriptive statistics ####
Data[, c(2, 3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x = value), fill = "#80C687", color = "#80C687", alpha = 0.8) +
facet_wrap(~variable, scales = "free")
gather(key = "variable", value = "value")
#### descriptive statistics ####
Data[, c(2, 3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x = value), fill = "#80C687", color = "#80C687", alpha = 0.8) +
facet_wrap(~variable, scales = "free")
#### descriptive statistics ####
Data[, c(2, 3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x = value), fill = "#80C687", color = "#80C687", alpha = 0.8) +
facet_wrap(~variable, scales = "free")
ggplot(data = Data) +
geom_boxplot(aes(points, country))
count <- table(Data$country, Data$score)
prop.table(count, margin = 1)
table(Data$country, Data$score)
m <- matrix(1:4,2)
m
prop.table(m)
prop.table(m,1)
prop.table(m,margin =1)
count <- table(Data$country, Data$score)
p <- prop.table(count, margin = 1)
kable(p, caption = "Cross Table of Country & Score")
View(Data)
View(Data)
View(Data)
#### descriptive statistics ####
Data[, c(2, 3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x = value), fill = "#80C687", color = "#80C687", alpha = 0.8) +
facet_wrap(~variable, scales = "free")
library(ggplot2)
Data <- Data[, -1]
Data$country <- as.factor(Data$country)
setwd("C:\\Users\\Aishwin Tikku\\Documents\\GitHub\\DAS2021-Group-28")
Data <- read.csv("dataset28.csv")
View(Data)
Data <- Data[, -1]
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
# Group by points, those greater than 90 are pass, others are fail
Data <- Data %>% mutate(score = ifelse(points > 90, "Pass", "Fail"))
Data$score <- as.factor(Data$score)
`
``
```{r his, fig.width=6, fig.height=4, fig.align='center',echo = FALSE, eval = TRUE, warning = TRUE, message = FALSE, fig.cap="\\label{fig:hist} Histogram of Price and Points"}
Data <- Data[, -1]
Data$country <- as.factor(Data$country)
# chi square test
chisq.test(Data$country, Data$score)
Data <- read.csv("dataset28.csv")
#### data processing ####
Data <- Data[, -1]
glimpse(Data)
summary(Data)
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
# Group by points, those greater than 90 are pass, others are fail
Data <- Data %>% mutate(score = ifelse(points > 90, "Pass", "Fail"))
Data$score <- as.factor(Data$score)
#### descriptive statistics ####
Data[, c(2, 3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x = value), fill = "#80C687", color = "#80C687", alpha = 0.8) +
facet_wrap(~variable, scales = "free")
# boxplot of points by country
ggplot(data = Data) +
geom_boxplot(aes(points, country))
# cross-table of country and score
count <- table(Data$country, Data$score)
prop.table(count, margin = 1)
# chi square test
chisq.test(Data$country, Data$score)
# chi square test
a <- chisq.test(Data$country, Data$score)
print_chi2(a)
count <- table(Data$country, Data$score)
prop.table(count, margin = 1)%>%
kable(caption ="Cross Table of Country and Score")
# chi square test
chisq.test(Data$country, Data$score)
# density plot by score
ggplot(data = Data) +
geom_density(aes(price, group = score, fill = score))
ggplot(data = Data) +
geom_density(aes(price, group = score, fill = score))
$$\widehat{\mbox{Height}} = \widehat{\alpha} + \widehat{\beta}_{\mbox{Fwd}} \cdot \mathbb{I}_{\mbox{Fwd}}(x)$$
fit <- glm(score ~ price + country,
data = Data,
family = binomial(link = "logit"))
fit %>% summary()
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, comment = NA, fig.pos = 'H')
options(digits = 4)
library(tidyverse)
library(ggplot2)
library(tidymodels)
library(GGally)
library(car)
library(sjPlot)
library(skimr)
library(kableExtra)
library(knitr)
library(janitor)
library(tidyverse)
library(ggplot2)
library(tidymodels)
library(GGally)
library(car)
library(sjPlot)
library(skimr)
library(kableExtra)
library(knitr)
library(janitor)
setwd("C:\\Users\\Aishwin Tikku\\Documents\\GitHub\\DAS2021-Group-28")
Data <- Data[, -1]
Data$country <- as.factor(Data$country)
Data <- read.csv("dataset28.csv")
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, comment = NA, fig.pos = 'H')
options(digits = 4)
library(tidyverse)
library(ggplot2)
library(tidymodels)
library(GGally)
library(car)
library(sjPlot)
library(skimr)
library(kableExtra)
library(knitr)
library(janitor)
Data <- read.csv("dataset28.csv")
setwd("~/GitHub/DAS2021-Group-28")
setwd("C:\Users\Derek\OneDrive - University of Glasgow\Desktop\RStudio\Data Analysis Skills\Group28_report")
setwd("C:\\Users\\Derek\\OneDrive - University of Glasgow\\Desktop\\RStudio\\Data Analysis Skills\\Group28_report")
Data <- read.csv("dataset28.csv")
