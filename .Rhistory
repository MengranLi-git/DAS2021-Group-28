<<<<<<< Updated upstream
# setwd("~/Desktop/Data Analysis Skills/Group work 2/Datasets-20210710")
Data <- read.csv("dataset28.csv")
# The whole data set has 7 factors and 2000 observations.
# The explanatory variables are:
# country – Country of origin
# price – The cost for a bottle of wine
# province – The province or state the wine is from
# title – The title of the wine review
# variety – The type of grape
# winery – The winery that made the wine
# the response variable y is points – The number of points awarded for the wine on a scale of 1-100 (although reviewsare only posted for ratings 80 and above)
#### data processing ####
Data <- Data[, -1]
=======
>>>>>>> Stashed changes
glimpse(Data)
summary(Data)
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
<<<<<<< Updated upstream
# Group by points, those greater than 90 are pass, others are fail
Data <- Data %>% mutate(score = ifelse(points > 90, "Pass", "Fail"))
Data$score <- as.factor(Data$score)
#### descriptive statistics ####
Data[, c(2, 3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x = value), fill = "#80C687", color = "#80C687", alpha = 0.8) +
facet_wrap(~variable, scales = "free")
# boxplot of points by country
ggplot(data = Data) +
geom_boxplot(aes(points, country))
# cross-table of country and score
count <- table(Data$country, Data$score)
prop.table(count, margin = 1)
# chi square test
chisq.test(Data$country, Data$score)
# density plot by score
ggplot(data = Data) +
geom_density(aes(price, group = score, fill = score))
#### glm model ####
fit <- glm(score ~ price + country,
data = Data,
family = binomial(link = "logit"))
fit %>% summary()
# NewZealand and Italy are significantly different from others
NewZealand <- Data %>% filter(country == "New Zealand")
Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "logit" ~ "logit",
!country %in% c("New Zealand", "logit") ~ "others"
)
)
newdata <- Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "logit" ~ "logit",
!country %in% c("New Zealand", "logit") ~ "others"
)
)
newdata <- Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "logit" ~ "logit",
!country %in% c("New Zealand", "logit") ~ "others"
)
)
fit2 <- glm(score ~ price + kind,
data = newdata,
family = binomial(link = "logit"))
glance(fit2)
glm(score ~ price + kind + province,
data = newdata,
family = binomial(link = "logit"))
library(janitor)
Data %>%
tabyl(country,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
Data %>%
tabyl(province,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
chisq.test(Data$province, Data$score)
summary(table(Data$province, Data$score))
table(Data$province, Data$score)
table(Data$province)
t <- table(Data$province)
summary(t)
t <- as.matrix(t)
t
t <- as.matrix(table(Data$province))
summary(t)
boxplot(t)
t[t>10]
newdata$location[t>10] == much
newdata$location[t>10] = "much"
newdata$location = NA
newdata$location[t>10] = "much"
newdata$location[t<2] = "less"
newdata$location[t<= 10 & t>= 2] = "normal"
View(newdata)
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit"))
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
chisq.test(Data$province, Data$score)
newdata$location = newdata$province
newdata$location[t<2] = "less"
newdata$location = as.vector(newdata$location)
newdata$location[t<2] = "less"
View(newdata)
newdata$location = as.factor(newdata$location)
summary(t)
quantile(t)
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata$location[t<9] = "less"
newdata$location = as.factor(newdata$location)
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
quantile(t)
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata$location[t>10] = "much"
newdata$location = as.factor(newdata$location)
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata$location[t<9] = "less"
newdata$location = as.factor(newdata$location)
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata$location[t<10] = "less"
newdata$location = as.factor(newdata$location)
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
View(newdata)
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata$location[t<9] = "less"
newdata$location = as.factor(newdata$location)
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
Data %>%
tabyl(province,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
Data %>%
tabyl(province,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata$location[t<2] = "less"
newdata$location = as.factor(newdata$location)
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
Data %>%
tabyl(province,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata$location[t<2] = "less"
newdata$location = as.factor(newdata$location)
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata$location[t<9] = "less"
newdata$location = as.factor(newdata$location)
Data %>%
tabyl(location,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
newdata %>%
tabyl(location,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata$location[t<9] = "less"
newdata$location = as.factor(newdata$location)
newdata %>%
tabyl(location,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata$location[t<9] = "less"
newdata$location = as.factor(newdata$location)
chisq.test(newdata$location, newdata$score)
table(newdata$location, newdata$score)
t <- as.matrix(table(Data$province))
t<9
col.names(t)[t<9]
col.name(t)[t<9]
colnames(t)
rownames(t)
rownames(t)[t<9]
newdata %>%
mutate(locationn = ifelse(location %in% rownames(t)[t<9], "less", location))
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata %>%
mutate(location = ifelse(location %in% rownames(t)[t<9], "less", location))
newdata <- newdata %>%
mutate(location = ifelse(location %in% rownames(t)[t<9], "less", location))
newdata$location = as.factor(newdata$location)
newdata %>%
tabyl(location,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata <- newdata %>%
mutate(location = ifelse(location %in% rownames(t)[t<10], "less", location))
newdata$location = as.factor(newdata$location)
newdata %>%
tabyl(location,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
View(newdata)
newdata$location = newdata$province
newdata$location = as.vector(newdata$location)
newdata <- newdata %>%
mutate(location = ifelse(location %in% rownames(t)[t<3], "less", location))
newdata$location = as.factor(newdata$location)
newdata %>%
tabyl(location,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
glm(score ~ price + kind + location,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
View(newdata)
newdata %>%
tabyl(variaty,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
=======
summary(Data)
Data[,c(2,3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
ggplot(data = data.frame(Data), mapping = aes(x = Data$country, y = ..count..)) + geom_bar(stat = 'count')
ggplot(data = data.frame(Data), mapping = aes(x = Data$province, y = ..count..)) + geom_bar(stat = 'count')
ggplot(data = data.frame(Data), mapping = aes(x = Data$country, y = ..count..)) + geom_bar(stat = 'count')
ggplot(data = data.frame(Data), mapping = aes(x = Data$province, y = ..count..)) + geom_bar(stat = 'count')
>>>>>>> Stashed changes
library(tidyverse)
library(tidymodels)
library(GGally)
library(car)
<<<<<<< Updated upstream
library(sjPlot)
library(janitor)
# setwd("~/Desktop/Data Analysis Skills/Group work 2/Datasets-20210710")
Data <- read.csv("dataset28.csv")
# The whole data set has 7 factors and 2000 observations.
# The explanatory variables are:
# country – Country of origin
# price – The cost for a bottle of wine
# province – The province or state the wine is from
# title – The title of the wine review
# variety – The type of grape
# winery – The winery that made the wine
# the response variable y is points – The number of points awarded for the wine on a scale of 1-100 (although reviewsare only posted for ratings 80 and above)
Data <- Data[, -1]
=======
Data <- read.csv("dataset28.csv")
Data <- Data[,-1]
>>>>>>> Stashed changes
glimpse(Data)
summary(Data)
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
<<<<<<< Updated upstream
Data <- Data %>% mutate(score = ifelse(points > 90, "Pass", "Fail"))
Data$score <- as.factor(Data$score)
Data %>%
tabyl(country,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
chisq.test(Data$country, Data$score)
newdata %>%
tabyl(variaty,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
newdata <- Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "logit" ~ "logit",
!country %in% c("New Zealand", "logit") ~ "others"
)
)
newdata %>%
tabyl(variaty,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
newdata %>%
tabyl(variety,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
t <- as.matrix(table(Data$variety))
summary(t)
quantile(t)
rownames(t)
t <- as.matrix(table(Data$variety))
newdata <- newdata %>%
mutate(variety = ifelse(variety %in% rownames(t)[t<3], "less", variety))
newdata$variety = as.factor(newdata$variety)
glm(score ~ price + kind + variety,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
t <- as.matrix(table(Data$variety))
summary(t)
t
rownames(t)
rownames(t)[t<3]
newdata <- Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "logit" ~ "logit",
!country %in% c("New Zealand", "logit") ~ "others"
)
)
chisq.test(Data$province, Data$score)
newdata %>%
tabyl(variety,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
t <- as.matrix(table(Data$variety))
summary(t)
newdata %>%
mutate(variety = ifelse(variety %in% rownames(t)[t<3], "less", variety))
variety %in% rownames(t)[t<3]
rownames(t)[t<3]
Data$variety %in% rownames(t)[t<3]
newdata$variety[t<3] = "less"
View(newdata)
newdata <- Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "logit" ~ "logit",
!country %in% c("New Zealand", "logit") ~ "others"
)
)
newdata$variety <- as.vector(newdata$variety)
newdata$variety[t<3] = "less"
newdata$variety <- as.factor(newdata$variety)
glm(score ~ price + kind + variety,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
t <- as.matrix(table(Data$variety))
summary(t)
newdata$variety <- as.vector(newdata$variety)
newdata$variety[t<11] = "less"
newdata$variety <- as.factor(newdata$variety)
glm(score ~ price + kind + variety,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
t <- as.matrix(table(Data$variety))
summary(t)
newdata$variety <- as.vector(newdata$variety)
newdata$variety[t<5] = "less"
newdata$variety <- as.factor(newdata$variety)
glm(score ~ price + kind + variety,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
View(newdata)
t <- as.matrix(table(Data$variety))
summary(t)
newdata$variety <- as.vector(newdata$variety)
newdata$variety[t<20] = "less"
newdata$variety <- as.factor(newdata$variety)
glm(score ~ price + kind + variety,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
newdata$variety <- as.vector(newdata$variety)
newdata$variety[t<200] = "less"
newdata$variety <- as.factor(newdata$variety)
glm(score ~ price + kind + variety,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
View(newdata)
newdata %>%
tabyl(variety,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
t
row.names(t)[t<200]
row.names(t)[t<2]
newdata$variety %in% row.names(t)[t<2]
newdata$variety[newdata$variety %in% row.names(t)[t<2]]
newdata$variety[which(newdata$variety %in% row.names(t)[t<2])]
which(newdata$variety %in% row.names(t)[t<2])
Data %>%
tabyl(variety,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
chisq.test(Data$variety, Data$score)
t <- as.matrix(table(Data$variety))
t
[t<2]
t<2
row.names(t)[t<2]
which(newdata$variety %in% row.names(t)[t<2])
newdata$variety
newdata <- Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "logit" ~ "logit",
!country %in% c("New Zealand", "logit") ~ "others"
)
)
newdata$variety[which(newdata$variety %in% row.names(t)[t<2])]
newdata$variety[which(newdata$variety %in% row.names(t)[t<2])] = "less"
newdata$variety <- as.vector(newdata$variety)
newdata$variety <- as.factor(newdata$variety)
newdata <- Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "logit" ~ "logit",
!country %in% c("New Zealand", "logit") ~ "others"
)
)
newdata$variety <- as.vector(newdata$variety)
newdata$variety[which(newdata$variety %in% row.names(t)[t<5])] = "less"
newdata$variety <- as.factor(newdata$variety)
newdata <- Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "logit" ~ "logit",
!country %in% c("New Zealand", "logit") ~ "others"
)
)
newdata$variety <- as.vector(newdata$variety)
newdata$variety[which(newdata$variety %in% row.names(t)[t<10])] = "less"
newdata$variety <- as.factor(newdata$variety)
glm(score ~ price + kind + variety,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
newdata <- Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "logit" ~ "logit",
!country %in% c("New Zealand", "logit") ~ "others"
)
)
newdata$variety <- as.vector(newdata$variety)
newdata$variety[which(newdata$variety %in% row.names(t)[t<20])] = "less"
newdata$variety <- as.factor(newdata$variety)
glm(score ~ price + kind + variety,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
Data %>%
tabyl(variety,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
newdata %>%
tabyl(variety,score)%>%
adorn_percentages()%>%
adorn_pct_formatting()%>%
adorn_ns()
glm(score ~ price + kind + variety,
data = newdata,
family = binomial(link = "logit")) %>%
summary()
chisq.test(newdata$variety, newdata$score)
=======
mod.yanny <- glm(points ~ price + province + variety, data = Data, family = binomial(link = "logit"))
mod.yanny %>%
summary()
Data <- Data %>% mutate(score = ifelse(points > 60, "Pass", "Fail"))
mod.yanny <- glm(score ~ price + province + variety, data = Data, family = binomial(link = "logit"))
Data$score <- as.factor(Date$score)
Data$score <- as.factor(Data$score)
mod.yanny <- glm(score ~ price + province + variety, data = Data, family = binomial(link = "logit"))
mod.yanny %>%
summary()
mod.yanny <- glm(score ~ price, data = Data, family = binomial(link = "logit"))
mod.yanny %>%
summary()
mod.yanny <- glm(score ~ price + province, data = Data, family = binomial(link = "logit"))
mod.yanny %>%
summary()
mod.yanny %>%
summary()
View(Data)
mod.yanny <- glm(score ~ price + country, data = Data, family = binomial(link = "logit"))
mod.yanny %>%
summary()
mod.yanny <- glm(score ~ price + country, data = Data, family = binomial(link = "logit"))
mod.yanny <- glm(score ~ price, data = Data, family = binomial(link = "logit"))
mod.yanny <- glm(score ~ price, data = Data,
family = binomial(link = "logit"),
maxit = 100)
mod.yanny %>%
summary()
View(Data)
Data <- Data %>% mutate(score = ifelse(points > 90, "Pass", "Fail"))
mod.yanny <- glm(score ~ price, data = Data,
family = binomial(link = "logit"))
Data$score <- as.factor(Data$score)
mod.yanny <- glm(score ~ price, data = Data,
family = binomial(link = "logit"))
mod.yanny %>%
summary()
mod.yanny <- glm(score ~ price + country, data = Data,
family = binomial(link = "logit"))
View(mod.yanny)
mod.yanny %>%
summary()
anova(points ~ province, Data)
aov(points ~ province, Data)
fit <- lm(points ~ province, Data)
aov(fit)
anova(fit)
fit <- lm(points ~ country ~ province, Data)
fit <- lm(points ~ country * province, Data)
anova(fit)
table(Data$country)
table(Data$country, Data$score)
Data %>% mutate(
if (country %in% c("Argentina",  "Canada",
"Chile", "Uruguay", "US")){countinent = "America"},
if (country %in% c("Australia", "New Zealand")){countinent = "Oceania"},
if (country %in% c("South Africa")){countinent = "Africa"},
if (country %in% c("Georgia", "Israel", "Turkey")){countinent = "Asia"},
if (country %in% c("Austria", "Croatia", "England",
"France", "Germany", "Greece", "Hungary",
"Italy", "Macedonia", "Portugal",
"Romania", "Slovenia", "Spain", "Ukraine")){countinent = "Europe"}
)
Data <- Data %>% mutate(
if (country %in% c("Argentina",  "Canada",
"Chile", "Uruguay", "US")){countinent = "America"},
if (country %in% c("Australia", "New Zealand")){countinent = "Oceania"},
if (country %in% c("South Africa")){countinent = "Africa"},
if (country %in% c("Georgia", "Israel", "Turkey")){countinent = "Asia"},
if (country %in% c("Austria", "Croatia", "England",
"France", "Germany", "Greece", "Hungary",
"Italy", "Macedonia", "Portugal",
"Romania", "Slovenia", "Spain", "Ukraine")){countinent = "Europe"}
)
View(Data)
Data <- Data %>% mutate(countinent =
case_when (country %in% c("Argentina",  "Canada",
"Chile", "Uruguay", "US") ~ "America",
country %in% c("Australia", "New Zealand") ~ "Oceania",
country %in% c("South Africa")~"Africa",
country %in% c("Georgia", "Israel", "Turkey")~"Asia",
country %in% c("Austria", "Croatia", "England",
"France", "Germany", "Greece", "Hungary",
"Italy", "Macedonia", "Portugal",
"Romania", "Slovenia", "Spain", "Ukraine")~countinent = "Europe"
) )
Data %>% mutate(
countinent =
case_when(country %in% c("Argentina",  "Canada",
"Chile", "Uruguay", "US") ~ "America",
country %in% c("Australia", "New Zealand") ~ "Oceania",
country %in% c("South Africa")~"Africa",
country %in% c("Georgia", "Israel", "Turkey")~"Asia",
country %in% c("Austria", "Croatia", "England",
"France", "Germany", "Greece", "Hungary",
"Italy", "Macedonia", "Portugal",
"Romania", "Slovenia", "Spain", "Ukraine")~countinent = "Europe"
)
)
Data %>% mutate(
countinent =
case_when(country %in% c("Argentina",  "Canada",
"Chile", "Uruguay", "US") ~ "America",
country %in% c("Australia", "New Zealand") ~ "Oceania",
country %in% c("South Africa")~"Africa",
country %in% c("Georgia", "Israel", "Turkey")~"Asia",
country %in% c("Austria", "Croatia", "England",
"France", "Germany", "Greece", "Hungary",
"Italy", "Macedonia", "Portugal",
"Romania", "Slovenia", "Spain", "Ukraine")~"Europe"
)
)
Data <- Data %>% mutate(
countinent =
case_when(country %in% c("Argentina",  "Canada",
"Chile", "Uruguay", "US") ~ "America",
country %in% c("Australia", "New Zealand") ~ "Oceania",
country %in% c("South Africa")~"Africa",
country %in% c("Georgia", "Israel", "Turkey")~"Asia",
country %in% c("Austria", "Croatia", "England",
"France", "Germany", "Greece", "Hungary",
"Italy", "Macedonia", "Portugal",
"Romania", "Slovenia", "Spain", "Ukraine")~"Europe"
)
)
View(Data)
table(Data$continent, Data$score)
Data$countinent <- as.factor(Data$countinent)
table(Data$continent, Data$score)
View(Data)
table(Data$continent)
levels(Data$countinent)
table(Data$countinent)
table(Data$countinent, Data$score)
mod.yanny <- glm(score ~ price + countinent, data = Data,
family = binomial(link = "logit"))
mod.yanny %>%
summary()
Data %>% filter(countinent == "America") %>%
glm(score ~ price + countinent,
family = binomial(link = "logit"))
America <- Data %>% filter(countinent == "America")
glm(score ~ price + countinent, data = America ,
family = binomial(link = "logit"))
View(America)
glm(score ~ price, data = America ,
family = binomial(link = "logit"))
glm(score ~ price + country, data = America ,
family = binomial(link = "logit"))
glm(score ~ price + country, data = America ,
family = binomial(link = "logit"))%>%
summary()
Oceania <- Data %>% filter(countinent == "Oceania")
glm(score ~ price + country, data = Oceania ,
family = binomial(link = "logit"))%>%
summary()
View(Oceania)
glm(score ~ price + province, data = Oceania ,
family = binomial(link = "logit"))%>%
summary()
Asia <- Data %>% filter(countinent == "Asia")
glm(score ~ price + province, data = Asia ,
family = binomial(link = "logit"))%>%
summary()
Africa <- Data %>% filter(countinent == "Africa")
glm(score ~ price + province, data = Africa ,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + country, data = Africa ,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + country, data = Asia ,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + country, data = Data ,
family = binomial(link = "logit"))%>%
summary()
ggplot(data = Data) %>%
geom_boxplot(aes(points, group = country))
ggplot(data = Data) +
geom_boxplot(aes(points, group = country))
glm(score ~ price + country, data = Data ,
family = binomial(link = "logit"))%>%
summary()
Data[,c(2,3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
ggplot(data = Data) +
geom_boxplot(aes(points, group = country))
table(Data$country)
table(Data$country)
aov(points ~ province, Data)
fit <- lm(points ~ province, Data)
aov(fit)
fit <- lm(score ~ province, Data)
aov(fit)
table(Data$country)
table(Data$country, Data$score)
table(Data$country, Data$score)
mod.yanny <- glm(score ~ price + country, data = Data,
family = binomial(link = "logit"))
mod.yanny %>%
summary()
NewZealand <- Data %>% filter(country == "New Zealand")
View(NewZealand)
glm(score ~ price + province, data = NewZealand,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + province + winery, data = NewZealand,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + province + variety, data = NewZealand,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + province + variety, data = NewZealand,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + province + variety + winery, data = NewZealand,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + province + variety, data = NewZealand,
family = binomial(link = "logit"))%>%
summary()
mod.yanny <- glm(score ~ price + country, data = Data,
family = binomial(link = "logit"))
mod.yanny %>%
summary()
Italy <- Data %>% filter(country == "Italy")
glm(score ~ price + province + variety, data = Italy,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + province, data = Italy,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + variety, data = Italy,
family = binomial(link = "logit"))%>%
summary()
ggplot(data = Data, aes(x = Data$country) +
geom_bar()
)
ggplot(data = Data, aes(x = country))+
geom_bar()
ggplot(data = data.frame(Data), mapping = aes(x = Data$country, y = ..count..)) + geom_bar(stat = 'count')
ggplot(data = Data, aes(x = country) + geom_bar()
)
ggplot(data = Data, aes(x = country)) + geom_bar()
ggplot(data = Data, aes(x = province)) + geom_bar()
Data[,c(2,3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
ggplot(data = Data) +
geom_boxplot(aes(points, group = country))
ggplot(data = Data) +
geom_boxplot(aes(points, group = as.factor(country)))
ggplot(data = Data) +
geom_boxplot(aes(points, country))
table(Data$country, Data$score)
count <- table(Data$country, Data$score)
prop.table(count)
prop.table(count, margin = 1)
chisq.test(Data$country, Data$score)
Data[,c(2,3)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_histogram(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
ggplot(data = Data) +
geom_boxplot(aes(price, score))
ggplot(data = Data) +
geom_density(aes(price, score))
ggplot(data = Data) +
geom_density(aes(price, group = score))
ggplot(data = Data) +
geom_density(aes(price, group = score, fill = score))
glm(score ~ price + country, data = Data,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + province + variety, data = NewZealand,
family = binomial(link = "logit"))%>%
summary()
Italy <- Data %>% filter(country == "Italy")
glm(score ~ price + variety, data = Italy,
family = binomial(link = "logit"))%>%
summary()
glm(score ~ price + province + variety, data = Italy,
family = binomial(link = "logit"))%>%
summary()
fit <- glm(score ~ price + country, data = Data,
family = binomial(link = "logit"))
fit %>% summary()
plot_model(fit, show.values = TRUE,
title = "Odds (Age)", show.p = TRUE)
library(tidymodels)
plot_model(fit, show.values = TRUE,
title = "Odds (Age)", show.p = TRUE)
install.packages("sjPlot")
library(sjPlot)
plot_model(fit, show.values = TRUE,
title = "Odds (Age)", show.p = TRUE)
plot_model(fit, type = "pred", title = "",
axis.title = c("Age", "Probability of hearing Yanny"))
fit1 <- glm(score ~ price, data = Data,
family = binomial(link = "logit"))
plot_model(fit, type = "pred", title = "",
axis.title = c("country", "Probability of pass"))
plot_model(fit, type = "pred", title = "",
axis.title = c("country", "Probability of pass"))
plot_model(fit1, type = "pred", title = "",
axis.title = c("country", "Probability of pass"))
plot_model(fit, show.values = TRUE,
title = "Odds (Age)", show.p = TRUE)
plot_model(fit2, show.values = TRUE,
title = "Odds (Age)", show.p = TRUE)
fit2 <- glm(score ~ country, data = Data,
family = binomial(link = "logit"))
plot_model(fit2, show.values = TRUE,
title = "Odds (Age)", show.p = TRUE)
anova(fit, fit1)
aov(fit, fit1)
library(broom)
glance(fit)
glance(fit1)
fit1 <- glm(score ~ price, data = Data,
family = binomial(link = "logit"))
plot_model(fit1, type = "pred", title = "",
axis.title = c("price", "Probability of pass"))
Data %>%
tabyl(country, score)
install.packages("tabyl")
library(tabyl)
install.packages("tabyls")
install.packages("tabyls")
chisq.test(Data$country, Data$score)
corr(Data$price, Data$points)
cor(Data$price, Data$points)
chisq.test(Data$country, Data$score)
styler:::style_active_file()
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, comment = NA, fig.pos = 'H')
getwd()
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, comment = NA, fig.pos = 'H')
options(digits = 4)
library(tidyverse)
library(ggplot2)
library(tidymodels)
library(GGally)
library(car)
library(sjPlot)
library(skimr)
library(kableExtra)
library(knitr)
Data <- read.csv("dataset28.csv")
Data <- Data[, -1]
Data$country <- as.factor(Data$country)
Data$province <- as.factor(Data$province)
Data$title <- as.factor(Data$title)
Data$variety <- as.factor(Data$variety)
Data$winery <- as.factor(Data$winery)
# Group by points, those greater than 90 are pass, others are fail
Data <- Data %>% mutate(score = ifelse(points > 90, "Pass", "Fail"))
Data$score <- as.factor(Data$score)
ggplot(data = Data) +
geom_boxplot(aes(points, country))
count <- table(Data$country, Data$score)
prop.table(count, margin = 1)%>%
kable(caption ="Cross Table of Country and Score")
count <- table(Data$country, Data$score)
prop.table(count, margin = 1)%>%
mutate(Fail = paste0(Fail,"%"), Pass = paste0(Pass,"%")) %>%
kable(caption ="Cross Table of Country and Score")
count <- table(Data$country, Data$score)
prop.table(count, margin = 1)%>%
as.data.frame()%
count <- table(Data$country, Data$score)
prop.table(count, margin = 1)%>%
as.data.frame()%>%
mutate(Fail = paste0(Fail,"%"), Pass = paste0(Pass,"%")) %>%
kable(caption ="Cross Table of Country and Score")
count <- table(Data$country, Data$score)
pro <- prop.table(count, margin = 1)
pro <- as.data.frame(pro)%>%
mutate(Fail = paste0(Fail,"%"), Pass = paste0(Pass,"%")) %>%
kable(caption ="Cross Table of Country and Score")
count <- table(Data$country, Data$score)
pro <- prop.table(count, margin = 1)
count <- table(Data$country, Data$score)
pro <- prop.table(count, margin = 1)
pro <- as.data.frame(as.matrix(pro))%>%
mutate(Fail = paste0(Fail,"%"), Pass = paste0(Pass,"%")) %>%
kable(caption ="Cross Table of Country and Score")
count <- table(Data$country, Data$score)
pro <- prop.table(count, margin = 1)
pro <- as.data.frame(as.matrix(pro))
View(pro)
count <- table(Data$country, Data$score)
pro <- prop.table(count, margin = 1)
pro <- as.data.frame(as.matrix(pro)) %>%
pro <- pro %>% spread(Var2, Freq)
install.packages("janitor")
count <- table(Data$country, Data$score)
Data %>%
tabyl(country, score) %>%
adorn_percentages() %>%
adorn_pct_formatting() %>%
adorn_ns()
library(tidyverse)
library(ggplot2)
library(tidymodels)
library(GGally)
library(car)
library(sjPlot)
library(skimr)
library(kableExtra)
library(knitr)
library(janitor)
count <- table(Data$country, Data$score)
Data %>%
tabyl(country, score) %>%
adorn_percentages() %>%
adorn_pct_formatting() %>%
adorn_ns()
Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "Italy" ~ "Italy",
!country %in% c("New Zealand", "Italy") ~ "other"
)
)
new <- Data %>% mutate(
kind = case_when(
country == "New Zealand" ~ "New Zealand",
country == "Italy" ~ "Italy",
!country %in% c("New Zealand", "Italy") ~ "other"
)
)
glm(score ~ price + country,
data = new,
family = binomial(link = "logit")) %>%
summary()
glm(score ~ price + kind,
data = new,
family = binomial(link = "logit")) %>%
summary()
fit <- glm(score ~ price + country,
data = Data,
family = binomial(link = "logit"))
fit %>% summary()
glance(fit)
fit2 <- glm(score ~ price + kind,
data = new,
family = binomial(link = "logit"))
summary(fit2)
glance(fit2)
glance(fit)
NewZealand <- Data %>% filter(country == "New Zealand")
glm(score ~ price + province + variety,
data = NewZealand,
family = binomial(link = "logit")) %>%
summary()
View(Data)
View(Data)
library(tidyverse)
library(tidymodels)
library(GGally)
library(car)
library(sjPlot)
library(janitor)
# setwd("~/Desktop/Data Analysis Skills/Group work 2/Datasets-20210710")
Data <- read.csv("dataset28.csv")
# The whole data set has 7 factors and 2000 observations.
# The explanatory variables are:
# country – Country of origin
# price – The cost for a bottle of wine
# province – The province or state the wine is from
# title – The title of the wine review
# variety – The type of grape
# winery – The winery that made the wine
# the response variable y is points – The number of points awarded for the wine on a scale of 1-100 (although reviewsare only posted for ratings 80 and above)
>>>>>>> Stashed changes
